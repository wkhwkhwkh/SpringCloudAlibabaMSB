<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--声明,注册springmvc的核心对象DispatcherServlet
        需要tomcat服务器启动后创建DispatcherServlet对象的实例.
        为什么要创建DispatcherServlet对象的实例？
        因为DispatcherServlet在它的创建过程中，会同时创建springmvc容器对象
        读取springmvc的配置文件，把这个配置文件的对象都创建好，当用户发起请求时
        就可以直接使用对象了.

        servlet的初始化会执行init方法,DispatherServlet在init()中{
            //创建容器，读取配置文件
            webApplicationContext ctx = new ClassPathXmlApplicationContext("springmvc.xml")
            //把容器对象放入到servletContext中
            getServletContext().serAttribute(key,ctx);
        }
    -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--在tomcat启动后创建servlet对象
            load-on-startup:表示tomcat启动后创建对象的顺序,它的值是整数，数值越小
            tomcat创建对象的时间越早,大于等于0的整数
        -->
        <!--自定义springmvc读取的配置文件的位置-->
        <init-param>
            <!--springmvc的配置文件的位置的属性-->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <!--启动tomcat报错:/WEB-INF/springmvc-servlet.xml
             springmvc创建容器对象时，读取的配置文件默认是/WEB-INF/<servlet-name>-servlet.xml-->
        <load-on-startup>1</load-on-startup>

    </servlet>



    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>